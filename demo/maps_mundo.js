// Generated by CoffeeScript 1.6.3
var calculateMarkerRoute, calculateRoute, from, geodesicOnClick, getTransport, initialize, markerOnClick, onSearch, polygonOnClick, polylineOnClick, search, to;

initialize = function() {
  var _this = this;
  window.map = new Gmaps.Map("map", {
    disableDefaultUI: true
  });
  document.getElementById("onSearch").addEventListener("click", onSearch);
  document.getElementById("onRoute").addEventListener("click", calculateRoute);
  document.getElementById("onMarkerRoute").addEventListener("click", calculateMarkerRoute);
  document.getElementById("onZoomIn").addEventListener("click", function() {
    return window.map.zoomIn();
  });
  document.getElementById("onZoomOut").addEventListener("click", function() {
    return window.map.zoomOut();
  });
  document.getElementById("onHybrid").addEventListener("click", function() {
    return window.map.type("HYBRID");
  });
  document.getElementById("onRoad").addEventListener("click", function() {
    return window.map.type("ROAD");
  });
  document.getElementById("onSatellite").addEventListener("click", function() {
    return window.map.type("SATELLITE");
  });
  return document.getElementById("onTerrain").addEventListener("click", function() {
    return window.map.type("TERRAIN");
  });
};

getTransport = function() {
  var TRANSPORT_TYPES;
  TRANSPORT_TYPES = {
    BIKE: google.maps.DirectionsTravelMode.BICYCLING,
    CAR: google.maps.DirectionsTravelMode.DRIVING,
    TRANSIT: google.maps.DirectionsTravelMode.TRANSIT,
    WALK: google.maps.DirectionsTravelMode.WALKING
  };
  return TRANSPORT_TYPES[document.querySelector('input[name="transport"]:checked').value];
};

google.maps.event.addDomListener(window, "load", initialize);

markerOnClick = function() {
  window.map.off("click");
  return window.map.on("click", function(event) {
    return window.map.addMarker(event.latLng);
  });
};

polylineOnClick = function() {
  window.map.off("click");
  return window.map.on("click", function(event) {
    window.polyline = window.polyline || new Gmaps.Polyline();
    window.map.addPolyline(window.polyline);
    return window.polyline.addPoint(event.latLng);
  });
};

polygonOnClick = function() {
  window.map.off("click");
  return window.map.on("click", function(event) {
    window.polygon = window.polygon || new Gmaps.Polygon();
    window.map.addPolygon(window.polygon);
    return window.polygon.addPoint(event.latLng);
  });
};

geodesicOnClick = function() {
  window.map.off("click");
  return window.map.on("click", function(event) {
    window.geodesic = window.geodesic || new Gmaps.Geodesic();
    window.map.addGeodesic(window.geodesic);
    return window.geodesic.addPoint(event.latLng);
  });
};

search = new google.maps.places.Autocomplete(document.getElementById("place_search"));

from = new google.maps.places.Autocomplete(document.getElementById("from"));

to = new google.maps.places.Autocomplete(document.getElementById("to"));

onSearch = function() {
  var lat, latLng, lon, place;
  place = search.getPlace();
  if (place == null) {
    return alert("Sitio no encontrado");
  }
  lat = place.geometry.location.nb;
  lon = place.geometry.location.ob;
  latLng = new google.maps.LatLng(lat, lon);
  return window.map.addMarker(latLng, null, true);
};

calculateRoute = function() {
  var destination, origin;
  origin = from.getPlace();
  destination = to.getPlace();
  if (!((origin != null) && (destination != null))) {
    return alert("Especifica destino y fin");
  }
  origin = from.getPlace().geometry.location;
  destination = to.getPlace().geometry.location;
  window.router = window.router || new Gmaps.Route(origin, destination, {
    travelMode: getTransport()
  }, []);
  window.map.addRoute(window.router);
  return window.router.calculate(function(error, result) {
    var el, i, img, indications, l, legs, _i, _ref, _results;
    console.log(result);
    if (result != null) {
      indications = document.getElementById("indications");
      indications.innerHtml = "";
      legs = result.routes[0].legs;
      _results = [];
      for (l = _i = 0, _ref = legs.length; 0 <= _ref ? _i < _ref : _i > _ref; l = 0 <= _ref ? ++_i : --_i) {
        _results.push((function() {
          var _j, _ref1, _results1;
          _results1 = [];
          for (i = _j = 0, _ref1 = legs[l].steps.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
            el = document.createElement("li");
            el.innerHTML = legs[l].steps[i].instructions;
            img = document.createElement("img");
            img.setAttribute("src", window.router.getStaticPath(l, i, {
              size: "100x100"
            }));
            el.appendChild(img);
            _results1.push(indications.appendChild(el));
          }
          return _results1;
        })());
      }
      return _results;
    }
  });
};

calculateMarkerRoute = function() {
  var destination, marker, origin, waypoints, _i, _len, _ref;
  waypoints = [];
  _ref = window.map.getMarker();
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    marker = _ref[_i];
    waypoints.push(marker.position);
    marker.setMap(null);
  }
  origin = waypoints.shift();
  destination = waypoints.pop();
  window.router = window.router || new Gmaps.Route(origin, destination, {
    travelMode: getTransport()
  }, waypoints);
  window.map.addRoute(window.router);
  return window.router.calculate(function(error, result) {
    var el, i, img, indications, l, legs, _j, _k, _ref1, _ref2;
    console.log(result);
    if (result != null) {
      indications = document.getElementById("indications");
      indications.innerHtml = "";
      legs = result.routes[0].legs;
      for (l = _j = 0, _ref1 = legs.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; l = 0 <= _ref1 ? ++_j : --_j) {
        el = document.createElement("li");
        el.innerHTML = "You are at " + legs[l].start_address;
        indications.appendChild(el);
        for (i = _k = 0, _ref2 = legs[l].steps.length; 0 <= _ref2 ? _k < _ref2 : _k > _ref2; i = 0 <= _ref2 ? ++_k : --_k) {
          el = document.createElement("li");
          el.innerHTML = legs[l].steps[i].instructions;
          img = document.createElement("img");
          img.setAttribute("src", window.router.getStaticPath(l, i, {
            size: "100x100"
          }));
          el.appendChild(img);
          indications.appendChild(el);
        }
        el = document.createElement("li");
      }
      el.innerHTML = "You are at " + legs[l].end_address;
      return indications.appendChild(el);
    }
  });
};
